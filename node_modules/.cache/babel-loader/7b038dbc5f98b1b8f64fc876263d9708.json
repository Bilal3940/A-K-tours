{"ast":null,"code":"import { isSsr, safeMatchMedia } from \"../Utils/Utils\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nexport class Retina {\n  constructor(container) {\n    this.container = container;\n  }\n\n  init() {\n    const container = this.container,\n          options = container.actualOptions;\n    this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n    const motionOptions = this.container.actualOptions.motion;\n\n    if (motionOptions && (motionOptions.disable || motionOptions.reduce.value)) {\n      const mediaQuery = safeMatchMedia(\"(prefers-reduced-motion: reduce)\");\n\n      if (mediaQuery) {\n        this._handleMotionChange(mediaQuery);\n\n        const handleChange = () => {\n          this._handleMotionChange(mediaQuery);\n\n          container.refresh().catch(() => {});\n        };\n\n        if (mediaQuery.addEventListener !== undefined) {\n          mediaQuery.addEventListener(\"change\", handleChange);\n        } else if (mediaQuery.addListener !== undefined) {\n          mediaQuery.addListener(handleChange);\n        }\n      } else {\n        this.reduceFactor = 1;\n      }\n    } else {\n      this.reduceFactor = 1;\n    }\n\n    const ratio = this.pixelRatio;\n\n    if (container.canvas.element) {\n      const element = container.canvas.element;\n      container.canvas.size.width = element.offsetWidth * ratio;\n      container.canvas.size.height = element.offsetHeight * ratio;\n    }\n\n    const particles = options.particles;\n    this.attractDistance = getRangeValue(particles.move.attract.distance) * ratio;\n    this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    this.maxSpeed = getRangeValue(particles.move.gravity.maxSpeed) * ratio;\n  }\n\n  initParticle(particle) {\n    const options = particle.options,\n          ratio = this.pixelRatio,\n          moveDistance = options.move.distance,\n          props = particle.retina;\n    props.attractDistance = getRangeValue(options.move.attract.distance) * ratio;\n    props.moveDrift = getRangeValue(options.move.drift) * ratio;\n    props.moveSpeed = getRangeValue(options.move.speed) * ratio;\n    props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n    const maxDistance = props.maxDistance;\n    maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n    maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n    props.maxSpeed = getRangeValue(options.move.gravity.maxSpeed) * ratio;\n  }\n\n  _handleMotionChange(mediaQuery) {\n    const options = this.container.actualOptions;\n\n    if (mediaQuery.matches) {\n      const motion = options.motion;\n      this.reduceFactor = motion.disable ? 0 : motion.reduce.value ? 1 / motion.reduce.factor : 1;\n    } else {\n      this.reduceFactor = 1;\n    }\n  }\n\n}","map":{"version":3,"names":["isSsr","safeMatchMedia","getRangeValue","Retina","constructor","container","init","options","actualOptions","pixelRatio","detectRetina","window","devicePixelRatio","motionOptions","motion","disable","reduce","value","mediaQuery","_handleMotionChange","handleChange","refresh","catch","addEventListener","undefined","addListener","reduceFactor","ratio","canvas","element","size","width","offsetWidth","height","offsetHeight","particles","attractDistance","move","attract","distance","sizeAnimationSpeed","animation","speed","maxSpeed","gravity","initParticle","particle","moveDistance","props","retina","moveDrift","drift","moveSpeed","maxDistance","horizontal","vertical","matches","factor"],"sources":["E:/Web Data/react js/my-app/node_modules/tsparticles-engine/esm/Core/Retina.js"],"sourcesContent":["import { isSsr, safeMatchMedia } from \"../Utils/Utils\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        const motionOptions = this.container.actualOptions.motion;\n        if (motionOptions && (motionOptions.disable || motionOptions.reduce.value)) {\n            const mediaQuery = safeMatchMedia(\"(prefers-reduced-motion: reduce)\");\n            if (mediaQuery) {\n                this._handleMotionChange(mediaQuery);\n                const handleChange = () => {\n                    this._handleMotionChange(mediaQuery);\n                    container.refresh().catch(() => {\n                    });\n                };\n                if (mediaQuery.addEventListener !== undefined) {\n                    mediaQuery.addEventListener(\"change\", handleChange);\n                }\n                else if (mediaQuery.addListener !== undefined) {\n                    mediaQuery.addListener(handleChange);\n                }\n            }\n            else {\n                this.reduceFactor = 1;\n            }\n        }\n        else {\n            this.reduceFactor = 1;\n        }\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles;\n        this.attractDistance = getRangeValue(particles.move.attract.distance) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n        this.maxSpeed = getRangeValue(particles.move.gravity.maxSpeed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveDistance = options.move.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(options.move.attract.distance) * ratio;\n        props.moveDrift = getRangeValue(options.move.drift) * ratio;\n        props.moveSpeed = getRangeValue(options.move.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(options.move.gravity.maxSpeed) * ratio;\n    }\n    _handleMotionChange(mediaQuery) {\n        const options = this.container.actualOptions;\n        if (mediaQuery.matches) {\n            const motion = options.motion;\n            this.reduceFactor = motion.disable ? 0 : motion.reduce.value ? 1 / motion.reduce.factor : 1;\n        }\n        else {\n            this.reduceFactor = 1;\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}