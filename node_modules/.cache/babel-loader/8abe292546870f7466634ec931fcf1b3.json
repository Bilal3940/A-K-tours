{"ast":null,"code":"import { animate, cancelAnimation } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { FrameManager } from \"./Utils/FrameManager\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\n\nfunction guardCheck(container) {\n  return container && !container.destroyed;\n}\n\nfunction loadContainerOptions(engine, container) {\n  const options = new Options(engine, container);\n\n  for (var _len = arguments.length, sourceOptionsArr = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    sourceOptionsArr[_key - 2] = arguments[_key];\n  }\n\n  loadOptions(options, ...sourceOptionsArr);\n  return options;\n}\n\nconst defaultPathGeneratorKey = \"default\",\n      defaultPathGenerator = {\n  generate: p => {\n    const v = p.velocity.copy();\n    v.angle += v.length * Math.PI / 180;\n    return v;\n  },\n  init: () => {},\n  update: () => {}\n};\nexport class Container {\n  constructor(engine, id, sourceOptions) {\n    this.id = id;\n    this._engine = engine;\n    this.fpsLimit = 120;\n    this.smooth = false;\n    this.duration = 0;\n    this.lifeTime = 0;\n    this._firstStart = true;\n    this.started = false;\n    this.destroyed = false;\n    this._paused = true;\n    this.lastFrameTime = 0;\n    this.zLayers = 100;\n    this.pageHidden = false;\n    this._sourceOptions = sourceOptions;\n    this._initialSourceOptions = sourceOptions;\n    this.retina = new Retina(this);\n    this.canvas = new Canvas(this);\n    this.particles = new Particles(this._engine, this);\n    this.frameManager = new FrameManager(this);\n    this.pathGenerators = new Map();\n    this.interactivity = {\n      mouse: {\n        clicking: false,\n        inside: false\n      }\n    };\n    this.plugins = new Map();\n    this.drawers = new Map();\n    this._options = loadContainerOptions(this._engine, this);\n    this.actualOptions = loadContainerOptions(this._engine, this);\n    this._eventListeners = new EventListeners(this);\n\n    if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n      this._intersectionObserver = new IntersectionObserver(entries => this._intersectionManager(entries));\n    }\n\n    this._engine.dispatchEvent(\"containerBuilt\", {\n      container: this\n    });\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  get sourceOptions() {\n    return this._sourceOptions;\n  }\n\n  addClickHandler(callback) {\n    if (!guardCheck(this)) {\n      return;\n    }\n\n    const el = this.interactivity.element;\n\n    if (!el) {\n      return;\n    }\n\n    const clickOrTouchHandler = (e, pos, radius) => {\n      if (!guardCheck(this)) {\n        return;\n      }\n\n      const pxRatio = this.retina.pixelRatio,\n            posRetina = {\n        x: pos.x * pxRatio,\n        y: pos.y * pxRatio\n      },\n            particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n      callback(e, particles);\n    };\n\n    const clickHandler = e => {\n      if (!guardCheck(this)) {\n        return;\n      }\n\n      const mouseEvent = e,\n            pos = {\n        x: mouseEvent.offsetX || mouseEvent.clientX,\n        y: mouseEvent.offsetY || mouseEvent.clientY\n      };\n      clickOrTouchHandler(e, pos, 1);\n    };\n\n    const touchStartHandler = () => {\n      if (!guardCheck(this)) {\n        return;\n      }\n\n      touched = true;\n      touchMoved = false;\n    };\n\n    const touchMoveHandler = () => {\n      if (!guardCheck(this)) {\n        return;\n      }\n\n      touchMoved = true;\n    };\n\n    const touchEndHandler = e => {\n      var _a, _b, _c;\n\n      if (!guardCheck(this)) {\n        return;\n      }\n\n      if (touched && !touchMoved) {\n        const touchEvent = e;\n        let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n\n        if (!lastTouch) {\n          lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n\n          if (!lastTouch) {\n            return;\n          }\n        }\n\n        const canvasRect = (_a = this.canvas.element) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect(),\n              pos = {\n          x: lastTouch.clientX - ((_b = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _b !== void 0 ? _b : 0),\n          y: lastTouch.clientY - ((_c = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _c !== void 0 ? _c : 0)\n        };\n        clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n      }\n\n      touched = false;\n      touchMoved = false;\n    };\n\n    const touchCancelHandler = () => {\n      if (!guardCheck(this)) {\n        return;\n      }\n\n      touched = false;\n      touchMoved = false;\n    };\n\n    let touched = false,\n        touchMoved = false;\n    el.addEventListener(\"click\", clickHandler);\n    el.addEventListener(\"touchstart\", touchStartHandler);\n    el.addEventListener(\"touchmove\", touchMoveHandler);\n    el.addEventListener(\"touchend\", touchEndHandler);\n    el.addEventListener(\"touchcancel\", touchCancelHandler);\n  }\n\n  addPath(key, generator) {\n    let override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (!guardCheck(this) || !override && this.pathGenerators.has(key)) {\n      return false;\n    }\n\n    this.pathGenerators.set(key, generator !== null && generator !== void 0 ? generator : defaultPathGenerator);\n    return true;\n  }\n\n  destroy() {\n    if (!guardCheck(this)) {\n      return;\n    }\n\n    this.stop();\n    this.particles.destroy();\n    this.canvas.destroy();\n\n    for (const [, drawer] of this.drawers) {\n      if (drawer.destroy) {\n        drawer.destroy(this);\n      }\n    }\n\n    for (const key of this.drawers.keys()) {\n      this.drawers.delete(key);\n    }\n\n    this._engine.plugins.destroy(this);\n\n    this.destroyed = true;\n\n    const mainArr = this._engine.dom(),\n          idx = mainArr.findIndex(t => t === this);\n\n    if (idx >= 0) {\n      mainArr.splice(idx, 1);\n    }\n\n    this._engine.dispatchEvent(\"containerDestroyed\", {\n      container: this\n    });\n  }\n\n  draw(force) {\n    if (!guardCheck(this)) {\n      return;\n    }\n\n    let refreshTime = force;\n    this._drawAnimationFrame = animate()(async timestamp => {\n      if (refreshTime) {\n        this.lastFrameTime = undefined;\n        refreshTime = false;\n      }\n\n      await this.frameManager.nextFrame(timestamp);\n    });\n  }\n\n  exportConfiguration() {\n    return JSON.stringify(this.actualOptions, (key, value) => {\n      if (key === \"_engine\" || key === \"_container\") {\n        return;\n      }\n\n      return value;\n    }, 2);\n  }\n\n  exportImage(callback, type, quality) {\n    var _a;\n\n    return (_a = this.canvas.element) === null || _a === void 0 ? void 0 : _a.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n  }\n\n  exportImg(callback) {\n    this.exportImage(callback);\n  }\n\n  getAnimationStatus() {\n    return !this._paused && !this.pageHidden && guardCheck(this);\n  }\n\n  handleClickMode(mode) {\n    if (!guardCheck(this)) {\n      return;\n    }\n\n    this.particles.handleClickMode(mode);\n\n    for (const [, plugin] of this.plugins) {\n      if (plugin.handleClickMode) {\n        plugin.handleClickMode(mode);\n      }\n    }\n  }\n\n  async init() {\n    if (!guardCheck(this)) {\n      return;\n    }\n\n    const shapes = this._engine.plugins.getSupportedShapes();\n\n    for (const type of shapes) {\n      const drawer = this._engine.plugins.getShapeDrawer(type);\n\n      if (drawer) {\n        this.drawers.set(type, drawer);\n      }\n    }\n\n    this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n    this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n    this.retina.init();\n    this.canvas.init();\n    this.updateActualOptions();\n    this.canvas.initBackground();\n    this.canvas.resize();\n    this.zLayers = this.actualOptions.zLayers;\n    this.duration = getRangeValue(this.actualOptions.duration) * 1000;\n    this.lifeTime = 0;\n    this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n    this.smooth = this.actualOptions.smooth;\n\n    const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n\n    for (const [id, plugin] of availablePlugins) {\n      this.plugins.set(id, plugin);\n    }\n\n    for (const [, drawer] of this.drawers) {\n      if (drawer.init) {\n        await drawer.init(this);\n      }\n    }\n\n    for (const [, plugin] of this.plugins) {\n      if (plugin.init) {\n        plugin.init(this.actualOptions);\n      } else if (plugin.initAsync !== undefined) {\n        await plugin.initAsync(this.actualOptions);\n      }\n    }\n\n    this._engine.dispatchEvent(\"containerInit\", {\n      container: this\n    });\n\n    this.particles.init();\n    this.particles.setDensity();\n\n    for (const [, plugin] of this.plugins) {\n      if (plugin.particlesSetup !== undefined) {\n        plugin.particlesSetup();\n      }\n    }\n\n    this._engine.dispatchEvent(\"particlesSetup\", {\n      container: this\n    });\n  }\n\n  async loadTheme(name) {\n    if (!guardCheck(this)) {\n      return;\n    }\n\n    this._currentTheme = name;\n    await this.refresh();\n  }\n\n  pause() {\n    if (!guardCheck(this)) {\n      return;\n    }\n\n    if (this._drawAnimationFrame !== undefined) {\n      cancelAnimation()(this._drawAnimationFrame);\n      delete this._drawAnimationFrame;\n    }\n\n    if (this._paused) {\n      return;\n    }\n\n    for (const [, plugin] of this.plugins) {\n      if (plugin.pause) {\n        plugin.pause();\n      }\n    }\n\n    if (!this.pageHidden) {\n      this._paused = true;\n    }\n\n    this._engine.dispatchEvent(\"containerPaused\", {\n      container: this\n    });\n  }\n\n  play(force) {\n    if (!guardCheck(this)) {\n      return;\n    }\n\n    const needsUpdate = this._paused || force;\n\n    if (this._firstStart && !this.actualOptions.autoPlay) {\n      this._firstStart = false;\n      return;\n    }\n\n    if (this._paused) {\n      this._paused = false;\n    }\n\n    if (needsUpdate) {\n      for (const [, plugin] of this.plugins) {\n        if (plugin.play) {\n          plugin.play();\n        }\n      }\n    }\n\n    this._engine.dispatchEvent(\"containerPlay\", {\n      container: this\n    });\n\n    this.draw(needsUpdate || false);\n  }\n\n  async refresh() {\n    if (!guardCheck(this)) {\n      return;\n    }\n\n    this.stop();\n    return this.start();\n  }\n\n  async reset() {\n    if (!guardCheck(this)) {\n      return;\n    }\n\n    this._options = loadContainerOptions(this._engine, this);\n    return this.refresh();\n  }\n\n  setNoise(noiseOrGenerator, init, update) {\n    if (!guardCheck(this)) {\n      return;\n    }\n\n    this.setPath(noiseOrGenerator, init, update);\n  }\n\n  setPath(pathOrGenerator, init, update) {\n    if (!pathOrGenerator || !guardCheck(this)) {\n      return;\n    }\n\n    const pathGenerator = Object.assign({}, defaultPathGenerator);\n\n    if (typeof pathOrGenerator === \"function\") {\n      pathGenerator.generate = pathOrGenerator;\n\n      if (init) {\n        pathGenerator.init = init;\n      }\n\n      if (update) {\n        pathGenerator.update = update;\n      }\n    } else {\n      const oldGenerator = pathGenerator;\n      pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n      pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n      pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n    }\n\n    this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n  }\n\n  async start() {\n    if (!guardCheck(this) || this.started) {\n      return;\n    }\n\n    await this.init();\n    this.started = true;\n\n    this._eventListeners.addListeners();\n\n    if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n      this._intersectionObserver.observe(this.interactivity.element);\n    }\n\n    for (const [, plugin] of this.plugins) {\n      if (plugin.startAsync !== undefined) {\n        await plugin.startAsync();\n      } else if (plugin.start !== undefined) {\n        plugin.start();\n      }\n    }\n\n    this._engine.dispatchEvent(\"containerStarted\", {\n      container: this\n    });\n\n    this.play();\n  }\n\n  stop() {\n    var _a;\n\n    if (!guardCheck(this) || !this.started) {\n      return;\n    }\n\n    this._firstStart = true;\n    this.started = false;\n\n    this._eventListeners.removeListeners();\n\n    this.pause();\n    this.particles.clear();\n    this.canvas.clear();\n\n    if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n      this._intersectionObserver.unobserve(this.interactivity.element);\n    }\n\n    for (const [, plugin] of this.plugins) {\n      (_a = plugin.stop) === null || _a === void 0 ? void 0 : _a.call(plugin);\n    }\n\n    for (const key of this.plugins.keys()) {\n      this.plugins.delete(key);\n    }\n\n    this._sourceOptions = this._options;\n\n    this._engine.dispatchEvent(\"containerStopped\", {\n      container: this\n    });\n  }\n\n  updateActualOptions() {\n    this.actualOptions.responsive = [];\n    const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n    this.actualOptions.setTheme(this._currentTheme);\n\n    if (this.responsiveMaxWidth === newMaxWidth) {\n      return false;\n    }\n\n    this.responsiveMaxWidth = newMaxWidth;\n    return true;\n  }\n\n  _intersectionManager(entries) {\n    if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n      return;\n    }\n\n    for (const entry of entries) {\n      if (entry.target !== this.interactivity.element) {\n        continue;\n      }\n\n      (entry.isIntersecting ? this.play : this.pause)();\n    }\n  }\n\n}","map":{"version":3,"names":["animate","cancelAnimation","Canvas","EventListeners","FrameManager","Options","Particles","Retina","getRangeValue","loadOptions","guardCheck","container","destroyed","loadContainerOptions","engine","options","sourceOptionsArr","defaultPathGeneratorKey","defaultPathGenerator","generate","p","v","velocity","copy","angle","length","Math","PI","init","update","Container","constructor","id","sourceOptions","_engine","fpsLimit","smooth","duration","lifeTime","_firstStart","started","_paused","lastFrameTime","zLayers","pageHidden","_sourceOptions","_initialSourceOptions","retina","canvas","particles","frameManager","pathGenerators","Map","interactivity","mouse","clicking","inside","plugins","drawers","_options","actualOptions","_eventListeners","IntersectionObserver","_intersectionObserver","entries","_intersectionManager","dispatchEvent","addClickHandler","callback","el","element","clickOrTouchHandler","e","pos","radius","pxRatio","pixelRatio","posRetina","x","y","quadTree","queryCircle","clickHandler","mouseEvent","offsetX","clientX","offsetY","clientY","touchStartHandler","touched","touchMoved","touchMoveHandler","touchEndHandler","_a","_b","_c","touchEvent","lastTouch","touches","changedTouches","canvasRect","getBoundingClientRect","left","top","max","radiusX","radiusY","touchCancelHandler","addEventListener","addPath","key","generator","override","has","set","destroy","stop","drawer","keys","delete","mainArr","dom","idx","findIndex","t","splice","draw","force","refreshTime","_drawAnimationFrame","timestamp","undefined","nextFrame","exportConfiguration","JSON","stringify","value","exportImage","type","quality","toBlob","exportImg","getAnimationStatus","handleClickMode","mode","plugin","shapes","getSupportedShapes","getShapeDrawer","updateActualOptions","initBackground","resize","availablePlugins","getAvailablePlugins","initAsync","setDensity","particlesSetup","loadTheme","name","_currentTheme","refresh","pause","play","needsUpdate","autoPlay","start","reset","setNoise","noiseOrGenerator","setPath","pathOrGenerator","pathGenerator","Object","assign","oldGenerator","addListeners","HTMLElement","observe","startAsync","removeListeners","clear","unobserve","call","responsive","newMaxWidth","setResponsive","size","width","setTheme","responsiveMaxWidth","pauseOnOutsideViewport","entry","target","isIntersecting"],"sources":["E:/Web Data/react js/my-app/node_modules/tsparticles-engine/esm/Core/Container.js"],"sourcesContent":["import { animate, cancelAnimation } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { FrameManager } from \"./Utils/FrameManager\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) => {\n        const v = p.velocity.copy();\n        v.angle += (v.length * Math.PI) / 180;\n        return v;\n    },\n    init: () => {\n    },\n    update: () => {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this.duration = 0;\n        this.lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.frameManager = new FrameManager(this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            var _a, _b, _c;\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const canvasRect = (_a = this.canvas.element) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect(), pos = {\n                    x: lastTouch.clientX - ((_b = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _b !== void 0 ? _b : 0),\n                    y: lastTouch.clientY - ((_c = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _c !== void 0 ? _c : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator !== null && generator !== void 0 ? generator : defaultPathGenerator);\n        return true;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            if (drawer.destroy) {\n                drawer.destroy(this);\n            }\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = animate()(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this.frameManager.nextFrame(timestamp);\n        });\n    }\n    exportConfiguration() {\n        return JSON.stringify(this.actualOptions, (key, value) => {\n            if (key === \"_engine\" || key === \"_container\") {\n                return;\n            }\n            return value;\n        }, 2);\n    }\n    exportImage(callback, type, quality) {\n        var _a;\n        return (_a = this.canvas.element) === null || _a === void 0 ? void 0 : _a.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n    }\n    exportImg(callback) {\n        this.exportImage(callback);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            if (plugin.handleClickMode) {\n                plugin.handleClickMode(mode);\n            }\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        this.retina.init();\n        this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this.duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this.lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        for (const [, drawer] of this.drawers) {\n            if (drawer.init) {\n                await drawer.init(this);\n            }\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.init) {\n                plugin.init(this.actualOptions);\n            }\n            else if (plugin.initAsync !== undefined) {\n                await plugin.initAsync(this.actualOptions);\n            }\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            if (plugin.particlesSetup !== undefined) {\n                plugin.particlesSetup();\n            }\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimation()(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.pause) {\n                plugin.pause();\n            }\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._options = loadContainerOptions(this._engine, this);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = Object.assign({}, defaultPathGenerator);\n        if (typeof pathOrGenerator === \"function\") {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        this._eventListeners.addListeners();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.observe(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.startAsync !== undefined) {\n                await plugin.startAsync();\n            }\n            else if (plugin.start !== undefined) {\n                plugin.start();\n            }\n        }\n        this._engine.dispatchEvent(\"containerStarted\", { container: this });\n        this.play();\n    }\n    stop() {\n        var _a;\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.clear();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            (_a = plugin.stop) === null || _a === void 0 ? void 0 : _a.call(plugin);\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n    _intersectionManager(entries) {\n        if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n            return;\n        }\n        for (const entry of entries) {\n            if (entry.target !== this.interactivity.element) {\n                continue;\n            }\n            (entry.isIntersecting ? this.play : this.pause)();\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}